{"version":3,"sources":["components/Quiz.jsx","App.js","reportWebVitals.js","index.js"],"names":["index_value","Quiz","next","setState","details","questions","previous","quit","document","getElementById","style","display","state","className","id","this","question","optionA","optionB","optionC","optionD","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sPAIIA,EAAc,EAEGC,E,kDACnB,aAAe,IAAD,8BACZ,gBAIFC,KAAO,WACLF,GAAe,EACf,EAAKG,SAAS,CAAEC,QAASC,EAAUL,MAPvB,EASdM,SAAW,WACTN,GAAe,EACf,EAAKG,SAAS,CAAEC,QAASC,EAAUL,MAXvB,EAcdO,KAAO,WACLC,SAASC,eAAe,aAAaC,MAAMC,QAAU,QAbrD,EAAKC,MAAQ,CAAER,QAASC,EAAUL,IAFtB,E,0CAiBd,WACE,OACE,qBAAKa,UAAU,cAAf,SACE,sBAAKA,UAAU,YAAYC,GAAG,YAA9B,UACE,sBAAKA,GAAG,iBAAR,UACE,qBAAKD,UAAU,OAAf,sBACA,sBAAKA,UAAU,eAAf,UACE,oBAAGC,GAAG,UAAN,UAAiBd,EAAc,EAA/B,YACA,mBAAGc,GAAG,WAAN,SAAkBC,KAAKH,MAAMR,QAAQY,cAEvC,sBAAKH,UAAU,oBAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,wBAAQC,GAAG,QAAX,SAAoBC,KAAKH,MAAMR,QAAQa,UACvC,wBAAQH,GAAG,QAAX,SAAoBC,KAAKH,MAAMR,QAAQc,aAEzC,sBAAKL,UAAU,gBAAf,UACE,wBAAQC,GAAG,QAAX,SAAoBC,KAAKH,MAAMR,QAAQe,UACvC,wBAAQL,GAAG,QAAX,SAAoBC,KAAKH,MAAMR,QAAQgB,mBAI7C,sBAAKP,UAAU,WAAf,UACE,wBAAQQ,QAASN,KAAKT,SAAUQ,GAAG,OAAnC,sBAGA,wBAAQO,QAASN,KAAKb,KAAMY,GAAG,OAA/B,kBAGA,wBAAQO,QAASN,KAAKR,KAAMO,GAAG,OAA/B,8B,GA9CsBQ,aCCnBC,MAJf,WACE,OAAQ,cAAC,EAAD,KCQKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF3B,SAASC,eAAe,SAM1Be,K","file":"static/js/main.01f7fb53.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../styles/quiz.css\";\nimport questions from \"../resources/Question.json\";\n\nvar index_value = 0;\n\nexport default class Quiz extends Component {\n  constructor() {\n    super();\n    this.state = { details: questions[index_value] };\n  }\n\n  next = () => {\n    index_value += 1;\n    this.setState({ details: questions[index_value] });\n  };\n  previous = () => {\n    index_value -= 1;\n    this.setState({ details: questions[index_value] });\n  };\n\n  quit = () => {\n    document.getElementById(\"quiz-cont\").style.display = \"none\";\n  };\n  render() {\n    return (\n      <div className=\"quiz-parent\">\n        <div className=\"quiz-cont\" id=\"quiz-cont\">\n          <div id=\"quiz-container\">\n            <div className=\"head\">Question</div>\n            <div className=\"question-num\">\n              <p id=\"numbers\">{index_value + 1} of 15</p>\n              <p id=\"question\">{this.state.details.question}</p>\n            </div>\n            <div className=\"options-container\">\n              <div className=\"option-cont-1\">\n                <button id=\"opt-1\">{this.state.details.optionA}</button>\n                <button id=\"opt-2\">{this.state.details.optionB}</button>\n              </div>\n              <div className=\"option-cont-2\">\n                <button id=\"opt-3\">{this.state.details.optionC}</button>\n                <button id=\"opt-4\">{this.state.details.optionD}</button>\n              </div>\n            </div>\n          </div>\n          <div className=\"controls\">\n            <button onClick={this.previous} id=\"prev\">\n              Previous\n            </button>\n            <button onClick={this.next} id=\"next\">\n              Next\n            </button>\n            <button onClick={this.quit} id=\"quit\">\n              Quit\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport Quiz from './components/Quiz';\n\nfunction App() {\n  return (<Quiz />);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}